// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CodeCovsColumns holds the columns for the "code_covs" table.
	CodeCovsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "repository_name", Type: field.TypeString, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
		{Name: "git_organization", Type: field.TypeString, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
	}
	// CodeCovsTable holds the schema information for the "code_covs" table.
	CodeCovsTable = &schema.Table{
		Name:       "code_covs",
		Columns:    CodeCovsColumns,
		PrimaryKey: []*schema.Column{CodeCovsColumns[0]},
	}
	// RepositoriesColumns holds the columns for the "repositories" table.
	RepositoriesColumns = []*schema.Column{
		{Name: "repo_id", Type: field.TypeUUID, Unique: true},
		{Name: "repository_name", Type: field.TypeString, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
		{Name: "git_organization", Type: field.TypeString, Unique: true, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
		{Name: "description", Type: field.TypeString, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
		{Name: "git_url", Type: field.TypeString, Unique: true, Size: 2147483647, SchemaType: map[string]string{"postgres": "text"}},
		{Name: "code_cov_repo_id", Type: field.TypeUUID, Nullable: true},
	}
	// RepositoriesTable holds the schema information for the "repositories" table.
	RepositoriesTable = &schema.Table{
		Name:       "repositories",
		Columns:    RepositoriesColumns,
		PrimaryKey: []*schema.Column{RepositoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "repositories_code_covs_repo_id",
				Columns:    []*schema.Column{RepositoriesColumns[5]},
				RefColumns: []*schema.Column{CodeCovsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CodeCovsTable,
		RepositoriesTable,
	}
)

func init() {
	RepositoriesTable.ForeignKeys[0].RefTable = CodeCovsTable
}
