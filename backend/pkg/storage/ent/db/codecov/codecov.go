// Code generated by entc, DO NOT EDIT.

package codecov

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the codecov type in the database.
	Label = "code_cov"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRepositoryName holds the string denoting the repository_name field in the database.
	FieldRepositoryName = "repository_name"
	// FieldGitOrganization holds the string denoting the git_organization field in the database.
	FieldGitOrganization = "git_organization"
	// EdgeRepoID holds the string denoting the repo_id edge name in mutations.
	EdgeRepoID = "repo_id"
	// RepositoryFieldID holds the string denoting the ID field of the Repository.
	RepositoryFieldID = "repo_id"
	// Table holds the table name of the codecov in the database.
	Table = "code_covs"
	// RepoIDTable is the table that holds the repo_id relation/edge.
	RepoIDTable = "repositories"
	// RepoIDInverseTable is the table name for the Repository entity.
	// It exists in this package in order to avoid circular dependency with the "repository" package.
	RepoIDInverseTable = "repositories"
	// RepoIDColumn is the table column denoting the repo_id relation/edge.
	RepoIDColumn = "code_cov_repo_id"
)

// Columns holds all SQL columns for codecov fields.
var Columns = []string{
	FieldID,
	FieldRepositoryName,
	FieldGitOrganization,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// RepositoryNameValidator is a validator for the "repository_name" field. It is called by the builders before save.
	RepositoryNameValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
